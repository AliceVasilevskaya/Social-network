{"version":3,"sources":["Assets/Button/Button.js","Assets/FormsControl/FormsControl.module.css","Assets/Button/Button.module.css","Assets/FormsControl/FormsControl.js","utils/validators.js","components/Login/Login.jsx"],"names":["Button","children","onClick","disabled","active","className","props","classes","classNames","s","button","module","exports","FormControl","input","meta","touched","error","child","hasError","formControl","Input","restProps","Textarea","textarea","createField","component","placeholder","name","validate","type","text","required","value","maxLengthCreator","maxLength","length","maxLength40","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","login","checkbox","formError","connect","state","isAuth","auth","to","formData","email","password","rememberMe"],"mappings":"yRAIaA,EAAS,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,QAASC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,UAAcC,EAAW,iBAC5EC,EAAUC,IACZC,IAAEC,OACFL,EACA,CAACD,WAEL,OACI,8BACI,kDACQE,GADR,IAEID,UAAWE,EACXL,QAASA,EACTC,SAAUA,EAJd,SAKEF,S,oBChBdU,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,UAAY,gCAAgC,MAAQ,4BAA4B,SAAW,+BAA+B,SAAW,iC,oBCA3OD,EAAOC,QAAU,CAAC,OAAS,yB,wTCIdC,EAAc,SAAC,GAA+D,EAA9DC,MAA+D,IAAD,IAAvDC,KAAOC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,MAAehB,GAAwB,EAA/BiB,MAA+B,EAAxBjB,UACzDkB,GADiF,iBACtEH,GAAWC,GAC5B,OACI,sBAAKZ,UAAWI,IAAEW,YAAc,KAAOD,EAAWV,IAAEQ,MAAQ,KAA5D,UACI,8BACKhB,IAEJkB,GAAY,+BAAOF,QAKnBI,EAAQ,SAACf,GAClB,IAAOQ,EAA+CR,EAA/CQ,MAAoBT,GAA2BC,EAAxCS,KAAwCT,EAAlCY,MAAkCZ,EAA3BD,WAAciB,EAAzC,YAAsDhB,EAAtD,GACA,OAAO,cAACO,EAAD,2BAAgBP,GAAhB,aACH,+CAAOD,UAAWA,GAAeS,GAAWQ,QAGvCC,EAAW,SAACjB,GACrB,IAAOQ,EAA+CR,EAA/CQ,MAAoBT,GAA2BC,EAAxCS,KAAwCT,EAAlCY,MAAkCZ,EAA3BD,WAAciB,EAAzC,YAAsDhB,EAAtD,GACA,OAAO,cAACO,EAAD,2BAAgBP,GAAhB,aACH,kDAAUD,UAAWI,IAAEe,SAAW,IAAMnB,GAAeS,GAAWQ,QAG7DG,EAAc,SAACC,EAAWC,EAAaC,EAAMC,EAASxB,EAAWyB,GAAkC,IAA5BC,EAA2B,uDAApB,GAAKzB,EAAe,uDAAP,GACpG,OAAO,sBAAKD,UAAWA,EAAhB,UACH,cAAC,IAAD,aAAOqB,UAAWA,EAAWC,YAAaA,EAAaC,KAAMA,EAAMC,SAAUA,EAAUC,KAAMA,GAAUxB,IACtGyB,O,iCChCT,oEAEO,IAAMC,EAAW,SAAAC,GACpB,IAAGA,EACH,MAAO,qBAEEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,gBAAN,OAAuBA,EAAvB,e,iCCPlC,oGAUME,EAAaH,YAAiB,IAqB9BI,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAnBL,SAAC,GAA2B,IAA1BtB,EAAyB,EAAzBA,MAAOwB,EAAkB,EAAlBA,aACvB,OACI,uBAAMC,SAAUD,EAAhB,UACKhB,YAAYJ,IAAO,QAAS,QACzB,CAACW,IAAUK,GAAa5B,IAAEkC,OAC7BlB,YAAYJ,IAAO,WAAY,WAC5B,CAACW,IAAUK,GAAa5B,IAAEkC,MAAM,YACnClB,YAAYJ,IAAM,KAAM,aACrB,KAAMZ,IAAEmC,SAAS,WAAY,eAEhC3B,GAAS,qBAAKZ,UAAWI,IAAEoC,UAAlB,SACL5B,IAEL,8BACE,cAAC,IAAD,CAAQhB,SAAU,mBAsBjB6C,uBAJO,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,UAGiB,CAACL,WAA1BG,EAfD,SAACxC,GAIX,OAAGA,EAAM0C,OACE,cAAC,IAAD,CAAUE,GAAI,aAElB,8BACH,cAACZ,EAAD,CAAgBI,SAPH,SAACS,GACd7C,EAAMqC,MAAMQ,EAASC,MAAOD,EAASE,SAASF,EAASG","file":"static/js/7.bb541445.chunk.js","sourcesContent":["import s from './Button.module.css'\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nexport const Button = ({children, onClick, disabled, active, className, ...props}) => {\r\n    const classes = classNames(\r\n        s.button,\r\n        className,\r\n        {active}\r\n    )\r\n    return (\r\n        <div>\r\n            <button\r\n                {...props}\r\n                className={classes}\r\n                onClick={onClick}\r\n                disabled={disabled}\r\n            >{children}</button>\r\n        </div>\r\n    )\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__3ePls\",\"error\":\"FormsControl_error__3Zoc1\",\"formError\":\"FormsControl_formError__ENTLg\",\"login\":\"FormsControl_login__3eT-V\",\"checkbox\":\"FormsControl_checkbox__2IIJT\",\"textarea\":\"FormsControl_textarea__2kYG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__35Lk-\"};","import React from 'react';\r\nimport s from './FormsControl.module.css'\r\nimport {Field} from 'redux-form';\r\n\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, child, children, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : ' ')}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, className, ...restProps} = props\r\n    return <FormControl{...props}>\r\n        <input className={className} {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, className, ...restProps} = props;\r\n    return <FormControl{...props}>\r\n        <textarea className={s.textarea + ' ' + className} {...input} {...restProps}/>\r\n    </FormControl>\r\n}\r\nexport const createField = (component, placeholder, name, validate,className, type, text = '',  props = {}) => {\r\n    return <div className={className}>\r\n        <Field component={component} placeholder={placeholder} name={name} validate={validate} type={type} {...props}/>\r\n        {text}\r\n    </div>\r\n}","import {stopSubmit} from \"redux-form\";\r\n\r\nexport const required = value => {\r\n    if(value) return undefined;\r\n    return 'Field is required';\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `The limit is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport {reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../utils/validators';\r\nimport {createField, Input} from '../../Assets/FormsControl/FormsControl';\r\nimport {connect} from 'react-redux';\r\nimport {login} from '../../redux/authReducer';\r\nimport {Redirect} from 'react-router-dom';\r\nimport s from '../../Assets/FormsControl/FormsControl.module.css'\r\nimport {Button} from \"../../Assets/Button/Button\";\r\n\r\nconst maxLength40= maxLengthCreator(40)\r\n\r\nconst LoginForm = ({error, handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(Input, 'email', 'email',\r\n                [required, maxLength40],s.login)}\r\n            {createField(Input, 'password', 'password',\r\n                [required, maxLength40],s.login,'password')}\r\n            {createField(Input,null, 'rememberMe',\r\n                null, s.checkbox,'checkbox', 'remember me')}\r\n\r\n            {error && <div className={s.formError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n              <Button children={'Log in'} />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password,formData.rememberMe)\r\n    }\r\n    if(props.isAuth){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n    return <div>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}