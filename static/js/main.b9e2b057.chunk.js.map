{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/News/News.jsx","redux/appReducer.js","hoc/WithSuspense.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js","redux/authReducer.js","components/Header/Header.module.css","redux/profileReducer.js","redux/dialogReducer.js","utils/object-helpers.js","redux/usersReducer.js","api.js"],"names":["module","exports","Navbar","className","s","nav","to","activeClassName","active","Music","props","Settings","Header","header","login_block","isAuth","onClick","logout","link","HeaderContainer","this","React","Component","connect","state","auth","login","News","INITIALIZED_SUCCESS","initialState","initialized","initializedSuccess","type","appReducer","action","WithSuspense","fallback","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","App","initializeApp","path","render","compose","app","dispatch","promise","getAuthUserData","Promise","all","then","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profilePage","profileReducer","dialogPage","dialogReducer","usersPage","usersReducer","authReducer","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","document","getElementById","SET_AUTH_USER_DATA","id","email","setAuthUserData","payload","a","authApi","me","response","data","resultCode","password","rememberMe","message","messages","length","stopSubmit","_error","DELETE_POST","ADD_POST","SET_USER_PROFILE","SET_USER_STATUS","SAVE_PHOTO_SUCCESS","posts","likes","profile","status","addPost","newPostBody","setUserStatus","getUserProfile","userId","profileApi","getProfile","getUserStatus","getStatus","updateUserStatus","updateStatus","savePhoto","photoFile","photos","saveProfile","getState","reject","newPost","filter","p","postId","SEND_MESSAGE","dialogs","name","sendMessage","newMessageBody","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_IS_FETCHING","TOGGLE_FOLLOWING_PROGRESS","users","totalUsersCount","pageSize","currentPage","isFetching","followingInProgress","followSuccess","unfollowSuccess","setUsersSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","unfollow","usersAPI","bind","follow","requestUsers","getUsers","totalCount","setUsers","followed","instance","axios","baseURL","withCredentials","headers","get","post","delete","put","formData","FormData","append"],"mappings":"sJACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,OAAS,yB,+JC0BtCC,EAvBD,WACV,OAAO,sBAAKC,UAAWC,IAAEC,IAAlB,UACH,8BACI,cAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBH,IAAEI,OAA1C,uBAEJ,8BACI,cAAC,IAAD,CAASF,GAAG,WAAWC,gBAAiBH,IAAEI,OAA1C,wBAEJ,8BACI,cAAC,IAAD,CAASF,GAAG,QAAQC,gBAAiBH,IAAEI,OAAvC,oBAEJ,8BACI,cAAC,IAAD,CAASF,GAAG,SAASC,gBAAiBH,IAAEI,OAAxC,qBAEJ,8BACI,cAAC,IAAD,CAASF,GAAG,YAAYC,gBAAiBH,IAAEI,OAA3C,wBAEH,8BACG,cAAC,IAAD,CAASF,GAAG,SAASC,gBAAiBH,IAAEI,OAAxC,yB,OCfGC,EALD,SAACC,GACX,OAAO,yCCIIC,EALE,SAACD,GACd,OAAO,4C,wBCSIE,EARA,SAACF,GACZ,OAAO,wBAAQP,UAAWC,IAAES,OAArB,SACH,qBAAKV,UAAWC,IAAEU,YAAlB,SACKJ,EAAMK,OAAS,8BAAK,wBAAQC,QAASN,EAAMO,OAAQd,UAAYC,IAAEc,KAA7C,uBACrB,cAAC,IAAD,CAASZ,GAAI,SAAUH,UAAYC,IAAEc,KAArC,2B,gBCHNC,E,4JAEF,WACI,OAAO,cAAC,EAAD,eAAYC,KAAKV,Y,GAHFW,IAAMC,WAWpBC,eALM,SAACC,GAAD,MAAY,CAC9BT,OAAQS,EAAMC,KAAKV,OACnBW,MAAOF,EAAMC,KAAKC,SAGmB,CAACT,YAA1BM,CAAmCJ,GCTpCQ,EALH,SAACjB,GACT,OAAO,wC,QCDLkB,EAAsB,yCAEtBC,EAAe,CACjBC,aAAa,GAaJC,EAAqB,iBAAO,CAACC,KAAMJ,IAMjCK,EAjBI,WAAmC,IAAlCT,EAAiC,uDAAzBK,EAAcK,EAAW,uCACjD,OAAQA,EAAOF,MACX,KAAKJ,EACD,OAAO,2BACAJ,GADP,IAEIM,aAAa,IAErB,QACI,OAAON,ICbNW,EAAe,SAACb,GACzB,OAAO,SAACZ,GACJ,OAAO,cAAC,WAAD,CAAU0B,SAAU,aAApB,SACH,cAACd,EAAD,eAAeZ,QCQrB2B,EAAmBhB,IAAMiB,MAAM,kBAAM,uDACrCC,EAAoBlB,IAAMiB,MAAM,kBAAM,uDACtCE,EAAgBnB,IAAMiB,MAAM,kBAAM,iCAClCG,EAAQpB,IAAMiB,MAAM,kBAAM,uDAI1BI,E,uKACF,WACItB,KAAKV,MAAMiC,kB,oBAGf,WACI,OACI,sBAAKxC,UAAU,cAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,sBAAf,UACI,cAAC,IAAD,CAAOyC,KAAK,WAAWC,OAAQV,EAAaE,KAC5C,cAAC,IAAD,CAAOO,KAAK,mBAAmBC,OAAQV,EAAaI,KACpD,cAAC,IAAD,CAAOK,KAAK,SAASC,OAAQV,EAAaK,KAC1C,cAAC,IAAD,CAAOI,KAAK,QAAQC,OAAQ,kBAAM,cAAC,EAAD,OAClC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,OACnC,cAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,cAAC,EAAD,OACtC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQV,EAAaM,e,GAjB5CpB,IAAMC,WA2BTwB,cACXvB,aAJkB,SAACC,GAAD,MAAY,CAC9BM,YAAaN,EAAMuB,IAAIjB,eAGE,CAACa,cF7BD,kBAAM,SAACK,GAChC,IAAMC,EAAUD,EAASE,eACzBC,QAAQC,IAAI,CAACH,IAAUI,MAAK,kBAAML,EAASjB,UE4BzCuB,IAFSR,CAEGJ,GCrCHa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBJ,MAAK,YAAkD,IAA/CK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wCCERO,EAAWC,YAAgB,CAC7BC,YAAYC,IACZC,WAAWC,IACXC,UAAWC,IACX7C,KAAM8C,IACNxB,IAAKd,EACLuC,KAAMC,MAEHC,EAAmBC,OAAOC,sCAAwC9B,IAK1D+B,EAJAC,YAAYf,EACtBW,EAAiBK,YAAgBC,OCXlCC,IAASpC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUgC,MAAOA,EAAjB,SACI,cAAC,EAAD,QAEOK,SAASC,eAAe,SAW/C5B,K,uLCrBM6B,EAAqB,yCACrBvD,EAAe,CACjBH,MAAO,KACP2D,GAAI,KACJC,MAAO,KACPvE,QAAQ,GAaCwE,EAAkB,SAACF,EAAIC,EAAO5D,EAAOX,GAAnB,MAA+B,CAC1DiB,KAAMoD,EACNI,QAAS,CAACH,KAAIC,QAAO5D,QAAOX,YAGnBmC,EAAkB,yDAAM,WAAOF,GAAP,uBAAAyC,EAAA,sEACVC,IAAQC,KADE,OAEA,KAD3BC,EAD2B,QAEpBC,KAAKC,aAAmB,EACRF,EAASC,KAAKA,KAAlCR,EAD2B,EAC3BA,GAAIC,EADuB,EACvBA,MAAO5D,EADgB,EAChBA,MAChBsB,EAASuC,EAAgBF,EAAIC,EAAO5D,GAAO,KAJd,2CAAN,uDAOlBA,EAAQ,SAAC4D,EAAOS,EAAUC,GAAlB,8CAAiC,WAAOhD,GAAP,iBAAAyC,EAAA,sEAC3BC,IAAQhE,MAAM4D,EAAOS,EAAUC,GADJ,OAEjB,KAD3BJ,EAD4C,QAErCC,KAAKC,WACd9C,EAASE,MAEH+C,EAAUL,EAASC,KAAKK,SAASC,OAAS,EAC5CP,EAASC,KAAKK,SAAS,GAAK,aAChClD,EAASoD,YAAW,QAAS,CAACC,OAAQJ,MAPQ,2CAAjC,uDAURhF,EAAS,yDAAM,WAAO+B,GAAP,SAAAyC,EAAA,sEACDC,IAAQzE,SADP,OAES,IAFT,OAEX4E,KAAKC,YACd9C,EAASuC,EAAgB,KAAM,KAAM,MAAM,IAHvB,2CAAN,uDAOPhB,IAxCK,WAAmC,IAAlC/C,EAAiC,uDAAzBK,EAAcK,EAAW,uCAClD,OAAQA,EAAOF,MACX,KAAKoD,EACD,OAAO,2BACA5D,GACAU,EAAOsD,SAElB,QACI,OAAOhE,K,mBCjBnBxB,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,KAAO,uB,qSCI7FqG,G,KAAc,0CACdC,EAAW,sCACXC,EAAmB,8CACnBC,EAAkB,6CAClBC,EAAqB,gDAGrB7E,EAAe,CACjB8E,MAAO,CACH,CAACtB,GAAI,EAAGY,QAAS,YAAaW,MAAO,aACrC,CAACvB,GAAI,EAAGY,QAAS,YAAaW,MAAO,aACrC,CAACvB,GAAI,EAAGY,QAAS,YAAaW,MAAO,aACrC,CAACvB,GAAI,EAAGY,QAAS,YAAaW,MAAO,aACrC,CAACvB,GAAI,EAAGY,QAAS,YAAaW,MAAO,cAEzCC,QAAS,KACTC,OAAQ,MA0CCC,EAAU,SAACC,GAAD,MAAkB,CAAChF,KAAMuE,EAAUS,gBAG7CC,EAAgB,SAACH,GAAD,MAAa,CAAC9E,KAAMyE,EAAiBK,WAGrDI,EAAiB,SAACC,GAAD,8CAAY,WAAOnE,GAAP,eAAAyC,EAAA,sEACnB2B,IAAWC,WAAWF,GADH,OAChCtB,EADgC,OAEtC7C,EANwC,CAAChB,KAAMwE,EAAkBK,QAMzChB,IAFc,2CAAZ,uDAIjByB,EAAgB,SAACH,GAAD,8CAAY,WAAOnE,GAAP,eAAAyC,EAAA,sEAClB2B,IAAWG,UAAUJ,GADH,OAC/BtB,EAD+B,OAErC7C,EAASiE,EAAcpB,IAFc,2CAAZ,uDAIhB2B,EAAmB,SAACV,GAAD,8CAAY,WAAO9D,GAAP,SAAAyC,EAAA,sEACrB2B,IAAWK,aAAaX,GADH,OAEhB,IAFgB,OAE/BhB,YACL9C,EAASiE,EAAcH,IAHa,2CAAZ,uDAMnBY,EAAY,SAACC,GAAD,8CAAe,WAAO3E,GAAP,eAAAyC,EAAA,sEACb2B,IAAWM,UAAUC,GADR,OAEH,KAD3B/B,EAD8B,QAEvBC,KAAKC,YACd9C,GAnByB4E,EAmBChC,EAASC,KAAKA,KAAK+B,OAnBR,CAAC5F,KAAM0E,EAAoBkB,YAgBhC,iCAhBR,IAACA,IAgBO,OAAf,uDAMZC,EAAc,SAAChB,GAAD,8CAAa,WAAO7D,EAAU8E,GAAjB,iBAAArC,EAAA,6DAC9B0B,EAASW,IAAWrG,KAAK4D,GADK,SAEb+B,IAAWS,YAAYhB,GAFV,UAGH,KAD3BjB,EAF8B,QAGvBC,KAAKC,WAHkB,gBAIhC9C,EAASkE,EAAeC,IAJQ,8BAMlCnE,EAASoD,YAAW,eAAgB,CAACC,OAAOT,EAASC,KAAKK,SAAS,MANjC,kBAOzB/C,QAAQ4E,OAAOnC,EAASC,KAAKK,SAAS,KAPb,4CAAb,yDAyBZhC,IA3FQ,WAAmC,IAAlC1C,EAAiC,uDAAzBK,EAAcK,EAAW,uCACrD,OAAQA,EAAOF,MACX,KAAKuE,EACD,IAAIyB,EAAU,CACV3C,GAAI,EACJY,QAAS/D,EAAO8E,YAChBJ,MAAO,aAEX,OAAO,2BACApF,GADP,IAEImF,MAAM,CAAEqB,GAAH,mBAAexG,EAAMmF,UAElC,KAAKH,EACD,OAAO,2BACAhF,GADP,IAEIqF,QAAS3E,EAAO2E,UAGxB,KAAKJ,EACD,OAAO,2BACAjF,GADP,IAEIsF,OAAQ5E,EAAO4E,SAGvB,KAAKR,EACD,OAAO,2BACA9E,GADP,IAEImF,MAAOnF,EAAMmF,MAAMsB,QAAO,SAAAC,GAAC,OAAIA,EAAE7C,KAAOnD,EAAOiG,YAGvD,KAAKzB,EACD,OAAO,2BACAlF,GADP,IAEIqF,QAAQ,2BAAKrF,EAAMqF,SAAZ,IAAqBe,OAAQ1F,EAAO0F,WAGnD,QACI,OAAOpG,K,qFC5Db4G,EAAe,yCAEfvG,EAAgB,CAClBwG,QAAS,CACL,CAACC,KAAM,QAASjD,GAAI,GACpB,CAACiD,KAAM,QAASjD,GAAI,GACpB,CAACiD,KAAM,QAASjD,GAAI,GACpB,CAACiD,KAAM,QAASjD,GAAI,GACpB,CAACiD,KAAM,QAASjD,GAAI,IAExBa,SAAU,CACN,CAACb,GAAI,EAAEY,QAAS,gBAChB,CAACZ,GAAI,EAAEY,QAAS,gBAChB,CAACZ,GAAI,EAAEY,QAAS,gBAChB,CAACZ,GAAI,EAAEY,QAAS,gBAChB,CAACZ,GAAI,EAAEY,QAAS,kBAgBXsC,EAAc,SAACC,GAAD,MAAqB,CAACxG,KAAMoG,EAAcI,mBAEtDpE,IAdO,WAAmC,IAAlC5C,EAAiC,uDAAzBK,EAAcK,EAAW,uCACpD,OAAQA,EAAOF,MACX,KAAKoG,EACD,OAAO,2BACA5G,GADP,IAEI0E,SAAS,GAAD,mBAAK1E,EAAM0E,UAAX,CAAqB,CAACb,GAAG,EAAEY,QAAQ/D,EAAOsG,oBAE1D,QACI,OAAOhH,K,2PC3BNiH,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC5D,OAAOH,EAAMI,KAAI,SAAAC,GACb,OAAIA,EAAEH,KAAiBD,EACZ,2BAAII,GAAMF,GAEdE,MCFTC,EAAS,kCACTC,EAAW,oCACXC,EAAY,qCACZC,EAAwB,iDACxBC,EAAmB,4CACnBC,EAAqB,8CACrBC,EAA4B,qDAE9BzH,EAAe,CACf0H,MAAO,GACPC,gBAAiB,EACjBC,SAAU,IACVC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAmCZC,EAAgB,SAAC1C,GAAD,MAAa,CAACnF,KAAMgH,EAAQ7B,WAC5C2C,EAAkB,SAAC3C,GAAD,MAAa,CAACnF,KAAMiH,EAAU9B,WAChD4C,EAAkB,SAACR,GAAD,MAAY,CAACvH,KAAMkH,EAAWK,UAEhDS,EAAiB,SAACN,GAAD,MAAkB,CAAC1H,KAAMoH,EAAkBM,gBAC5DO,EAAmB,SAACN,GAAD,MAAiB,CAAC3H,KAAMqH,EAAoBM,eAC/DO,EAA0B,SAACP,EAAYtE,GAAb,MAAqB,CAACrD,KAAMsH,EAA2BK,aAAYtE,OAIpG8E,EAAkB,uCAAG,WAAOnH,EAASoH,EAAWjD,EAAQkD,GAAnC,SAAA5E,EAAA,6DACvBzC,EAASkH,GAAwB,EAAM/C,IADhB,SAENiD,EAAUjD,GAFJ,OAGC,IAHD,OAGdrB,YACL9C,EAASqH,EAAclD,IAE3BnE,EAASkH,GAAwB,EAAO/C,IANjB,2CAAH,4DAQXmD,EAAW,SAACnD,GAAD,8CAAY,WAAOnE,GAAP,eAAAyC,EAAA,sDAC5B2E,EAAaG,IAASD,SAASE,KAAKD,KAExCJ,EAAmBnH,EAAUoH,EAAWjD,EADpB2C,GAFY,2CAAZ,uDAKXW,EAAS,SAACtD,GAAD,8CAAY,WAAOnE,GAAP,eAAAyC,EAAA,sDAC1B2E,EAAaG,IAASE,OAAOD,KAAKD,KAEtCJ,EAAmBnH,EAAUoH,EAAWjD,EADpB0C,GAFU,2CAAZ,uDAKTa,EAAe,SAAChB,EAAaD,GAAd,8CAA2B,WAAOzG,GAAP,eAAAyC,EAAA,6DACnDzC,EAASiH,GAAiB,IADyB,SAElCM,IAASI,SAASjB,EAAaD,GAFG,OAE/C5D,EAF+C,OAGnD7C,EAASiH,GAAiB,IAC1BjH,EAAS+G,EAAgBlE,EAAK6C,QAC9B1F,GA9B+BwG,EA8BH3D,EAAK+E,WA9BmB,CAAC5I,KAAMmH,EAAuBK,qBA+BlFxG,EAASgH,EAAeN,IAN2B,iCAzBrB,IAACF,IAyBoB,OAA3B,uDAQfqB,EAAW,SAACnB,EAAaD,GAAd,8CAA2B,WAAOzG,GAAP,eAAAyC,EAAA,6DAC/CzC,EAASgH,EAAeN,IACxB1G,EAASiH,GAAiB,IAFqB,SAG9BM,IAASI,SAASjB,EAAaD,GAHD,OAG3C5D,EAH2C,OAI/C7C,EAASiH,GAAiB,IAC1BjH,EAAS+G,EAAgBlE,EAAK6C,QALiB,2CAA3B,uDAQTpE,IA5EM,WAAmC,IAAlC9C,EAAiC,uDAAzBK,EAAcK,EAAW,uCACnD,OAAQA,EAAOF,MACX,KAAKiH,EACD,OAAO,2BACAzH,GADP,IAEI+H,MAAOd,EAAoBjH,EAAM+H,MAAOrH,EAAOiF,OAAO,KAAM,CAAC2D,UAAU,MAE/E,KAAK9B,EACD,OAAO,2BACAxH,GADP,IAEI+H,MAAOd,EAAoBjH,EAAM+H,MAAOrH,EAAOiF,OAAO,KAAM,CAAC2D,UAAU,MAE/E,KAAK5B,EACD,OAAO,2BAAI1H,GAAX,IAAkB+H,MAAOrH,EAAOqH,QACpC,KAAKJ,EACD,OAAO,2BAAI3H,GAAX,IAAkBgI,gBAAiBtH,EAAOsH,kBAC9C,KAAKJ,EACD,OAAO,2BAAI5H,GAAX,IAAkBkI,YAAaxH,EAAOwH,cAC1C,KAAKL,EACD,OAAO,2BAAI7H,GAAX,IAAkBmI,WAAYzH,EAAOyH,aACzC,KAAKL,EACD,OAAO,2BACA9H,GADP,IAEIoI,oBAAqB1H,EAAOyH,WAAP,sBACXnI,EAAMoI,qBADK,CACgB1H,EAAOmD,KACtC7D,EAAMoI,oBAAoB3B,QAAO,SAAA5C,GAAE,OAAIA,IAAOnD,EAAOmD,QAEnE,QACI,OAAO7D,K,+BChDnB,kHAEIuJ,EAAWC,SAAa,CACxBC,QAAQ,gDACRC,iBAAiB,EACjBC,QAAS,CAAC,UAAW,0CAGdZ,EAAW,CAClBI,SADkB,WACwB,IAAjCjB,EAAgC,uDAAlB,EAAGD,EAAe,uDAAJ,GACjC,OAAOsB,EAASK,IAAT,qBAA2B1B,EAA3B,kBAAgDD,IAClDpG,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,SAEnC4E,OALkB,SAKXtD,GACH,OAAO4D,EAASM,KAAT,iBAAwBlE,IAC1B9D,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,SAEnCyE,SATkB,SASTnD,GACL,OAAO4D,EAASO,OAAT,iBAA0BnE,IAC5B9D,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAG5BuB,EAAa,CACpBC,WADoB,SACTF,GACP,OAAO4D,EAASK,IAAI,WAAajE,GAC5B9D,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,SAEnC0B,UALoB,SAKVJ,GACN,OAAO4D,EAASK,IAAI,kBAAoBjE,GACnC9D,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,SAEnC4B,aAToB,SASPX,GACT,OAAOiE,EAASQ,IAAT,iBAA+B,CAACzE,OAAQA,IAC1CzD,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,SAEnC6B,UAboB,SAaVC,GACN,IAAM6D,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAAS/D,GAClBoD,EAASQ,IAAT,gBAA8BC,EACjC,CAACL,QAAS,CACF,eAAgB,0BAGhCtD,YArBoB,SAqBRhB,GACR,OAAOkE,EAASQ,IAAT,UAAwB1E,KAG5BnB,EAAU,CACjBC,GADiB,WAEb,OAAOoF,EAASK,IAAT,YAEX1J,MAJiB,SAIX4D,EAAOS,GAA+B,IAArBC,EAAoB,wDACvC,OAAO+E,EAASM,KAAK,aAAc,CAAC/F,QAAOS,WAAUC,gBAEzD/E,OAPiB,WAQb,OAAO8J,EAASO,OAAO,kB","file":"static/js/main.b9e2b057.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__9VrRn\",\"active\":\"Navbar_active__oou2H\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar= () => {\r\n    return <nav className={s.nav}>\r\n        <div>\r\n            <NavLink to='/profile' activeClassName={s.active} >Profile</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/dialogs' activeClassName={s.active} >Messages</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/news' activeClassName={s.active} >News</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/music' activeClassName={s.active} >Audio</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to='/settings' activeClassName={s.active} >Settings</NavLink>\r\n         </div>\r\n         <div>\r\n            <NavLink to='/users' activeClassName={s.active} >Users</NavLink>\r\n        </div>\r\n\r\n    </nav>\r\n}\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Music = (props) => {\r\n    return <div>\r\n        Music\r\n    </div>\r\n}\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = (props) => {\r\n    return <div>\r\n        settings\r\n    </div>\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <div className={s.login_block}>\r\n            {props.isAuth ? <div><button onClick={props.logout} className ={s.link}>Log out</button></div> :\r\n            <NavLink to={'/login'} className ={s.link}> Log in </NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from '../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default  connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\n\r\nconst News= (props) => {\r\n    return <div>\r\n        news\r\n    </div>\r\n}\r\nexport default News","import {getAuthUserData} from './authReducer';\r\n\r\nconst INITIALIZED_SUCCESS = 'social-network/app/INITIALIZED_SUCCESS';\r\n\r\nconst initialState = {\r\n    initialized: false\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport const initializeApp = () => (dispatch) => {\r\n    const promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(() => dispatch(initializedSuccess))\r\n}\r\n\r\nexport default appReducer;","import React, {Suspense} from \"react\";\r\n\r\nexport const WithSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={'Loading...'}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {Route, withRouter} from 'react-router-dom';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport News from './components/News/News';\nimport {compose} from 'redux';\nimport {connect} from 'react-redux';\nimport {initializeApp} from './redux/appReducer';\nimport {WithSuspense} from \"./hoc/WithSuspense\";\n\nconst DialogsContainer = React.lazy( () => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer =  React.lazy( () => import('./components/Profile/ProfileContainer'));\nconst UsersContainer= React.lazy( () => import('./components/Users/UsersContainer'));\nconst Login = React.lazy( () => import('./components/Login/Login'));\n\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={WithSuspense(DialogsContainer)}/>\n                    <Route path='/profile:userId?' render={WithSuspense(ProfileContainer)}/>\n                    <Route path='/users' render={WithSuspense(UsersContainer)}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={WithSuspense(Login)}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\nexport default compose(\n    connect(mapStateToProps, {initializeApp})\n    , withRouter)(App)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogReducer from './dialogReducer';\r\nimport usersReducer from './usersReducer';\r\nimport thunkMiddleWare from 'redux-thunk';\r\nimport authReducer from './authReducer';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from './appReducer';\r\n\r\nconst reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogPage:dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n const store = createStore(reducers,\r\n     composeEnhancers(applyMiddleware(thunkMiddleWare)\r\n     ));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport store from \"./redux/redux-store\";\nimport {Provider} from \"react-redux\";\n    ReactDOM.render(\n        <HashRouter >\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>, document.getElementById('root')\n    );\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {authApi} from '../api';\r\nimport {stopSubmit} from 'redux-form';\r\n\r\nconst SET_AUTH_USER_DATA = 'social-network/auth/SET-AUTH-USER-DATA';\r\nconst initialState = {\r\n    login: null,\r\n    id: null,\r\n    email: null,\r\n    isAuth: false\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    const response = await authApi.me()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true))\r\n    }\r\n}\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    const response = await authApi.login(email, password, rememberMe)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        const message = response.data.messages.length > 0 ?\r\n            response.data.messages[0] : 'Some error';\r\n        dispatch(stopSubmit('login', {_error: message}))\r\n    }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n    const response = await authApi.logout()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1m1vu\",\"login_block\":\"Header_login_block__XDaBX\",\"link\":\"Header_link__2GBMy\"};","import {profileApi} from '../api';\r\nimport {stopSubmit} from \"redux-form\";\r\nimport React from \"react\";\r\nimport { SubmissionError } from 'redux-form';\r\n\r\nconst DELETE_POST = 'social-network/profilePage/DELETE_POST';\r\nconst ADD_POST = 'social-network/profilePage/ADD_POST';\r\nconst SET_USER_PROFILE = 'social-network/profilePage/SET_USER_PROFILE';\r\nconst SET_USER_STATUS = 'social-network/profilePage/SET_USER_STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'social-network/profilePage/SAVE_PHOTO_SUCCESS';\r\n\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, message: 'post text', likes: '❤ 15'},\r\n        {id: 2, message: 'post text', likes: '❤ 15'},\r\n        {id: 3, message: 'post text', likes: '❤ 15'},\r\n        {id: 4, message: 'post text', likes: '❤ 15'},\r\n        {id: 5, message: 'post text', likes: '❤ 15'}\r\n    ],\r\n    profile: null,\r\n    status: 'Hi'\r\n};\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostBody,\r\n                likes: '❤ 20'\r\n            }\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts],\r\n            }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        case SET_USER_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPost = (newPostBody) => ({type: ADD_POST, newPostBody});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const data = await profileApi.getProfile(userId)\r\n    dispatch(setUserProfile(data));\r\n}\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    const data = await profileApi.getStatus(userId)\r\n    dispatch(setUserStatus(data));\r\n}\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    const data = await profileApi.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setUserStatus(status));\r\n    }\r\n}\r\nexport const savePhoto = (photoFile) => async (dispatch) => {\r\n    const response = await profileApi.savePhoto(photoFile)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    const response = await profileApi.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n      dispatch(stopSubmit('edit-profile', {_error:response.data.messages[0]} ))\r\n        return Promise.reject(response.data.messages[0])\r\n    }\r\n}\r\n// export const saveProfile = (formData) => async (dispatch, getState) => {\r\n//     const userId = getState().auth.id;\r\n//     const response = await profileApi.saveProfile(formData);\r\n//     if (response.data.resultCode === 0) {\r\n//         dispatch(getUserProfile(userId));\r\n//     } else {\r\n//         let objError = {};\r\n//         Object.keys(formData.contacts).map(key => {\r\n//             objError[key] = response.data.messages[0];\r\n//         })\r\n//         dispatch(stopSubmit('edit-profile',\r\n//             {'contacts': objError}))\r\n//         return  Promise.reject(response.data.messages[0])\r\n//     }\r\n// }\r\nexport default profileReducer;","const SEND_MESSAGE = 'social-network/dialogPage/SEND-MESSAGE';\r\n\r\nconst initialState =  {\r\n    dialogs: [\r\n        {name: 'User1', id: 1},\r\n        {name: 'User2', id: 2},\r\n        {name: 'User3', id: 3},\r\n        {name: 'User4', id: 4},\r\n        {name: 'User5', id: 5}\r\n    ],\r\n    messages: [\r\n        {id: 1,message: 'text message'},\r\n        {id: 2,message: 'text message'},\r\n        {id: 3,message: 'text message'},\r\n        {id: 4,message: 'text message'},\r\n        {id: 5,message: 'text message'}\r\n    ]\r\n\r\n};\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages:[...state.messages, {id:6,message:action.newMessageBody}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps ) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from '../api';\r\nimport {updateObjectInArray} from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'social-network/usersPage/FOLLOW';\r\nconst UNFOLLOW = 'social-network/usersPage/UNFOLLOW';\r\nconst SET_USERS = 'social-network/usersPage/SET_USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'social-network/usersPage/SET_TOTAL_USERS_COUNT';\r\nconst SET_CURRENT_PAGE = 'social-network/usersPage/SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'social-network/usersPage/TOGGLE_IS_FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'social-network/usersPage/TOGGLE_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 100,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,'id', {followed: false})\r\n            }\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId,'id', {followed: true})\r\n            };\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : state.followingInProgress.filter(id => id !== action.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsersSuccess = (users) => ({type: SET_USERS, users});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, totalUsersCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, id) => ({type: TOGGLE_FOLLOWING_PROGRESS, isFetching, id});\r\n\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch,apiMethod, userId, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n}\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    let apiMethod =  usersAPI.unfollow.bind(usersAPI);\r\n    let actionCreator = unfollowSuccess;\r\n    followUnfollowFlow(dispatch, apiMethod, userId, actionCreator)\r\n}\r\nexport const follow = (userId) => async (dispatch) => {\r\n    let apiMethod =  usersAPI.follow.bind(usersAPI);\r\n    let actionCreator = followSuccess;\r\n    followUnfollowFlow(dispatch, apiMethod, userId, actionCreator);\r\n}\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsersSuccess(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n    dispatch(setCurrentPage(currentPage))\r\n}\r\nexport const setUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(toggleIsFetching(true))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsersSuccess(data.items))\r\n}\r\n\r\nexport default usersReducer;","import * as axios from \"axios\";\r\n\r\nlet instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {'API-KEY': '3583873e-cb34-4207-bcd8-c53e20271831'}\r\n})\r\n\r\nexport let usersAPI = {\r\n    getUsers(currentPage = 3, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data)\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n};\r\nexport let profileApi = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n            .then(response => response.data);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n            .then(response => response.data);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            .then(response => response.data);\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile)\r\n        return instance.put(`profile/photo`, formData,\r\n            {headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }})\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    },\r\n}\r\nexport let authApi = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post('auth/login', {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}